{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useState } from \"react\";\nimport Home from \"./src/screens/Home\";\nimport Getstart from \"./src/screens/Getstart\";\nimport Signup from \"./src/screens/Signup\";\nimport Login from \"./src/screens/Login\";\nimport Tabs from \"./src/screens/Tabs\";\nimport AuthContext from \"./src/screens/Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  function signin(newUser, callback) {\n    setUser(newUser);\n    callback();\n  }\n  function signout() {\n    setUser(null);\n  }\n  var value = {\n    user: user,\n    signin: signin,\n    signout: signout\n  };\n  return _jsx(AuthContext.Provider, {\n    value: value,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Getstarted\",\n          component: Getstart\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: Login\n        }), _jsx(Stack.Screen, {\n          name: \"Signup\",\n          component: Signup\n        }), _jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home\n        }), _jsx(Stack.Screen, {\n          name: \"Tabs\",\n          component: Tabs\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20,\n    backgroundColor: \"#fff\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","NavigationContainer","createNativeStackNavigator","AsyncStorage","useState","Home","Getstart","Signup","Login","Tabs","AuthContext","jsx","_jsx","jsxs","_jsxs","App","Stack","_useState","_useState2","_slicedToArray","user","setUser","signin","newUser","callback","signout","value","Provider","children","Navigator","screenOptions","headerShown","Screen","name","component","styles","create","container","height","display","justifyContent","paddingHorizontal","backgroundColor","textAlign"],"sources":["/Users/apple/PatientsTrackerApp/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useState } from \"react\";\nimport Home from \"./src/screens/Home\";\nimport Getstart from \"./src/screens/Getstart\";\nimport Signup from \"./src/screens/Signup\";\nimport Login from \"./src/screens/Login\";\nimport Tabs from \"./src/screens/Tabs\";\nimport AuthContext from \"./src/screens/Context\";\n\nexport default function App() {\n  const Stack = createNativeStackNavigator();\n\n  let [user, setUser] = useState(\"\");\n  function signin(newUser, callback) {\n    setUser(newUser);\n    callback();\n\n  }\n\n  function signout() {\n    setUser(null);\n\n  }\n\n  let value = { user, signin, signout };\n\n  return (\n    <AuthContext.Provider value={value}>\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        <Stack.Screen name=\"Getstarted\" component={Getstart} />\n        <Stack.Screen name=\"Login\" component={Login} />\n        <Stack.Screen name=\"Signup\" component={Signup} />\n        <Stack.Screen name=\"Home\" component={Home} />\n        <Stack.Screen name=\"Tabs\" component={Tabs} />\n      </Stack.Navigator>\n    </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20,\n    backgroundColor: \"#fff\",\n    textAlign: \"center\",\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAE5C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI;AACX,OAAOC,QAAQ;AACf,OAAOC,MAAM;AACb,OAAOC,KAAK;AACZ,OAAOC,IAAI;AACX,OAAOC,WAAW;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAMC,KAAK,GAAGd,0BAA0B,EAAE;EAE1C,IAAAe,SAAA,GAAsBb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAClB,SAASI,MAAMA,CAACC,OAAO,EAAEC,QAAQ,EAAE;IACjCH,OAAO,CAACE,OAAO,CAAC;IAChBC,QAAQ,EAAE;EAEZ;EAEA,SAASC,OAAOA,CAAA,EAAG;IACjBJ,OAAO,CAAC,IAAI,CAAC;EAEf;EAEA,IAAIK,KAAK,GAAG;IAAEN,IAAI,EAAJA,IAAI;IAAEE,MAAM,EAANA,MAAM;IAAEG,OAAO,EAAPA;EAAQ,CAAC;EAErC,OACEb,IAAA,CAACF,WAAW,CAACiB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAE,QAAA,EACnChB,IAAA,CAACX,mBAAmB;MAAA2B,QAAA,EAClBd,KAAA,CAACE,KAAK,CAACa,SAAS;QAACC,aAAa,EAAE;UAAEC,WAAW,EAAE;QAAM,CAAE;QAAAH,QAAA,GACrDhB,IAAA,CAACI,KAAK,CAACgB,MAAM;UAACC,IAAI,EAAC,YAAY;UAACC,SAAS,EAAE5B;QAAS,EAAG,EACvDM,IAAA,CAACI,KAAK,CAACgB,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAE1B;QAAM,EAAG,EAC/CI,IAAA,CAACI,KAAK,CAACgB,MAAM;UAACC,IAAI,EAAC,QAAQ;UAACC,SAAS,EAAE3B;QAAO,EAAG,EACjDK,IAAA,CAACI,KAAK,CAACgB,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAE7B;QAAK,EAAG,EAC7CO,IAAA,CAACI,KAAK,CAACgB,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAEzB;QAAK,EAAG;MAAA;IAC7B;EACE,EACC;AAE3B;AAEA,IAAM0B,MAAM,GAAGnC,UAAU,CAACoC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,eAAe;IAC/BC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,MAAM;IACvBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}